// Mocks generated by Mockito 5.3.2 from annotations
// in mirukuru/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i11;

import 'package:dartz/dartz.dart' as _i2;
import 'package:dio/dio.dart' as _i9;
import 'package:dio/src/adapter.dart' as _i5;
import 'package:dio/src/cancel_token.dart' as _i20;
import 'package:dio/src/dio_mixin.dart' as _i7;
import 'package:dio/src/options.dart' as _i4;
import 'package:dio/src/response.dart' as _i8;
import 'package:dio/src/transformer.dart' as _i6;
import 'package:mirukuru/core/error/error_model.dart' as _i12;
import 'package:mirukuru/core/network/dio_base.dart' as _i26;
import 'package:mirukuru/core/network/interceptors/log_interceptor.dart'
    as _i21;
import 'package:mirukuru/core/network/interceptors/refresh_interceptor.dart'
    as _i22;
import 'package:mirukuru/core/network/result_entity.dart' as _i10;
import 'package:mirukuru/core/network/task_type.dart' as _i27;
import 'package:mirukuru/core/util/connection_util.dart' as _i24;
import 'package:mirukuru/features/login/data/datasources/login_remote_data_source.dart'
    as _i14;
import 'package:mirukuru/features/login/data/models/login_model.dart' as _i13;
import 'package:mirukuru/features/login/domain/repositories/login_repository.dart'
    as _i3;
import 'package:mirukuru/features/login/domain/usecases/check_user_available.dart'
    as _i23;
import 'package:mirukuru/features/login/domain/usecases/post_login.dart'
    as _i15;
import 'package:mirukuru/features/login/domain/usecases/post_push_id.dart'
    as _i25;
import 'package:mirukuru/features/new_user_registration/data/datasources/user_registration_remote_data_source.dart'
    as _i19;
import 'package:mirukuru/features/new_user_registration/data/models/personal_register_model.dart'
    as _i18;
import 'package:mirukuru/features/new_user_registration/data/models/user_registration_model.dart'
    as _i17;
import 'package:mirukuru/features/new_user_registration/domain/repositories/user_registration_repository.dart'
    as _i16;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLoginRepository_1 extends _i1.SmartFake
    implements _i3.LoginRepository {
  _FakeLoginRepository_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBaseOptions_2 extends _i1.SmartFake implements _i4.BaseOptions {
  _FakeBaseOptions_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpClientAdapter_3 extends _i1.SmartFake
    implements _i5.HttpClientAdapter {
  _FakeHttpClientAdapter_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransformer_4 extends _i1.SmartFake implements _i6.Transformer {
  _FakeTransformer_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInterceptors_5 extends _i1.SmartFake implements _i7.Interceptors {
  _FakeInterceptors_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_6<T> extends _i1.SmartFake implements _i8.Response<T> {
  _FakeResponse_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDateTime_7 extends _i1.SmartFake implements DateTime {
  _FakeDateTime_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUri_8 extends _i1.SmartFake implements Uri {
  _FakeUri_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRequestOptions_9 extends _i1.SmartFake
    implements _i4.RequestOptions {
  _FakeRequestOptions_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInterceptorState_10<T> extends _i1.SmartFake
    implements _i7.InterceptorState<T> {
  _FakeInterceptorState_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDio_11 extends _i1.SmartFake implements _i9.Dio {
  _FakeDio_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResultEntity_12<T> extends _i1.SmartFake
    implements _i10.ResultEntity<T> {
  _FakeResultEntity_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [LoginRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginRepository extends _i1.Mock implements _i3.LoginRepository {
  MockLoginRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.Future<_i2.Either<_i12.ReponseErrorModel, _i13.LoginModel>> login(
    int? id,
    String? pass,
    String? apVersion,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            id,
            pass,
            apVersion,
          ],
        ),
        returnValue: _i11.Future<
                _i2.Either<_i12.ReponseErrorModel, _i13.LoginModel>>.value(
            _FakeEither_0<_i12.ReponseErrorModel, _i13.LoginModel>(
          this,
          Invocation.method(
            #login,
            [
              id,
              pass,
              apVersion,
            ],
          ),
        )),
      ) as _i11.Future<_i2.Either<_i12.ReponseErrorModel, _i13.LoginModel>>);
  @override
  _i11.Future<_i2.Either<_i12.ReponseErrorModel, String>> checkAppUserAvailable(
    String? memberNum,
    int? userNum,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkAppUserAvailable,
          [
            memberNum,
            userNum,
          ],
        ),
        returnValue:
            _i11.Future<_i2.Either<_i12.ReponseErrorModel, String>>.value(
                _FakeEither_0<_i12.ReponseErrorModel, String>(
          this,
          Invocation.method(
            #checkAppUserAvailable,
            [
              memberNum,
              userNum,
            ],
          ),
        )),
      ) as _i11.Future<_i2.Either<_i12.ReponseErrorModel, String>>);
  @override
  _i11.Future<_i2.Either<_i12.ReponseErrorModel, String>> postPushId(
    String? memberNum,
    int? userNum,
    String? androidPushId,
    String? iosPushId,
    int? deviceType,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #postPushId,
          [
            memberNum,
            userNum,
            androidPushId,
            iosPushId,
            deviceType,
          ],
        ),
        returnValue:
            _i11.Future<_i2.Either<_i12.ReponseErrorModel, String>>.value(
                _FakeEither_0<_i12.ReponseErrorModel, String>(
          this,
          Invocation.method(
            #postPushId,
            [
              memberNum,
              userNum,
              androidPushId,
              iosPushId,
              deviceType,
            ],
          ),
        )),
      ) as _i11.Future<_i2.Either<_i12.ReponseErrorModel, String>>);
}

/// A class which mocks [LoginDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginDataSource extends _i1.Mock implements _i14.LoginDataSource {
  MockLoginDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.Future<_i13.LoginModel?> appLogin(
    int? id,
    String? pass,
    String? apVersion,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #appLogin,
          [
            id,
            pass,
            apVersion,
          ],
        ),
        returnValue: _i11.Future<_i13.LoginModel?>.value(),
      ) as _i11.Future<_i13.LoginModel?>);
  @override
  _i11.Future<String?> checkAppUserAvailable(
    String? memberNum,
    int? userNum,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkAppUserAvailable,
          [
            memberNum,
            userNum,
          ],
        ),
        returnValue: _i11.Future<String?>.value(),
      ) as _i11.Future<String?>);
  @override
  _i11.Future<String?> postPushId(
    String? memberNum,
    int? userNum,
    String? androidPushId,
    String? iosPushId,
    int? deviceType,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #postPushId,
          [
            memberNum,
            userNum,
            androidPushId,
            iosPushId,
            deviceType,
          ],
        ),
        returnValue: _i11.Future<String?>.value(),
      ) as _i11.Future<String?>);
}

/// A class which mocks [PostLogin].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostLogin extends _i1.Mock implements _i15.PostLogin {
  MockPostLogin() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.LoginRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeLoginRepository_1(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i3.LoginRepository);
  @override
  _i11.Future<_i2.Either<_i12.ReponseErrorModel, _i13.LoginModel>> call(
          _i15.ParamLogin? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i11.Future<
                _i2.Either<_i12.ReponseErrorModel, _i13.LoginModel>>.value(
            _FakeEither_0<_i12.ReponseErrorModel, _i13.LoginModel>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i11.Future<_i2.Either<_i12.ReponseErrorModel, _i13.LoginModel>>);
}

/// A class which mocks [UserRegistrationRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRegistrationRepository extends _i1.Mock
    implements _i16.UserRegistrationRepository {
  MockUserRegistrationRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.Future<_i2.Either<_i12.ReponseErrorModel, _i17.UserRegistrationModel>>
      requestPretreatment(
    int? id,
    String? tel,
  ) =>
          (super.noSuchMethod(
            Invocation.method(
              #requestPretreatment,
              [
                id,
                tel,
              ],
            ),
            returnValue: _i11.Future<
                _i2.Either<_i12.ReponseErrorModel,
                    _i17.UserRegistrationModel>>.value(_FakeEither_0<
                _i12.ReponseErrorModel, _i17.UserRegistrationModel>(
              this,
              Invocation.method(
                #requestPretreatment,
                [
                  id,
                  tel,
                ],
              ),
            )),
          ) as _i11.Future<
              _i2.Either<_i12.ReponseErrorModel, _i17.UserRegistrationModel>>);
  @override
  _i11.Future<_i2.Either<_i12.ReponseErrorModel, String>> requestRegister(
    int? id,
    String? tel,
    String? userName,
    String? userNameKana,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestRegister,
          [
            id,
            tel,
            userName,
            userNameKana,
          ],
        ),
        returnValue:
            _i11.Future<_i2.Either<_i12.ReponseErrorModel, String>>.value(
                _FakeEither_0<_i12.ReponseErrorModel, String>(
          this,
          Invocation.method(
            #requestRegister,
            [
              id,
              tel,
              userName,
              userNameKana,
            ],
          ),
        )),
      ) as _i11.Future<_i2.Either<_i12.ReponseErrorModel, String>>);
  @override
  _i11.Future<_i2.Either<_i12.ReponseErrorModel, _i18.PersonalRegisterModel>>
      personalRegister(
    int? id,
    String? tel,
    String? userName,
    String? userNameKana,
  ) =>
          (super.noSuchMethod(
            Invocation.method(
              #personalRegister,
              [
                id,
                tel,
                userName,
                userNameKana,
              ],
            ),
            returnValue: _i11.Future<
                _i2.Either<_i12.ReponseErrorModel,
                    _i18.PersonalRegisterModel>>.value(_FakeEither_0<
                _i12.ReponseErrorModel, _i18.PersonalRegisterModel>(
              this,
              Invocation.method(
                #personalRegister,
                [
                  id,
                  tel,
                  userName,
                  userNameKana,
                ],
              ),
            )),
          ) as _i11.Future<
              _i2.Either<_i12.ReponseErrorModel, _i18.PersonalRegisterModel>>);
}

/// A class which mocks [UserRegistrationDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRegistrationDataSource extends _i1.Mock
    implements _i19.UserRegistrationDataSource {
  MockUserRegistrationDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.Future<_i17.UserRegistrationModel?> requestPretreatment(
    int? id,
    String? tel,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestPretreatment,
          [
            id,
            tel,
          ],
        ),
        returnValue: _i11.Future<_i17.UserRegistrationModel?>.value(),
      ) as _i11.Future<_i17.UserRegistrationModel?>);
  @override
  _i11.Future<String?> requestRegister(
    int? id,
    String? tel,
    String? userName,
    String? userNameKana,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestRegister,
          [
            id,
            tel,
            userName,
            userNameKana,
          ],
        ),
        returnValue: _i11.Future<String?>.value(),
      ) as _i11.Future<String?>);
  @override
  _i11.Future<_i18.PersonalRegisterModel?> personalRegister(
    int? id,
    String? tel,
    String? userName,
    String? userNameKana,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #personalRegister,
          [
            id,
            tel,
            userName,
            userNameKana,
          ],
        ),
        returnValue: _i11.Future<_i18.PersonalRegisterModel?>.value(),
      ) as _i11.Future<_i18.PersonalRegisterModel?>);
}

/// A class which mocks [Dio].
///
/// See the documentation for Mockito's code generation for more information.
class MockDio extends _i1.Mock implements _i9.Dio {
  MockDio() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.BaseOptions get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: _FakeBaseOptions_2(
          this,
          Invocation.getter(#options),
        ),
      ) as _i4.BaseOptions);
  @override
  set options(_i4.BaseOptions? _options) => super.noSuchMethod(
        Invocation.setter(
          #options,
          _options,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.HttpClientAdapter get httpClientAdapter => (super.noSuchMethod(
        Invocation.getter(#httpClientAdapter),
        returnValue: _FakeHttpClientAdapter_3(
          this,
          Invocation.getter(#httpClientAdapter),
        ),
      ) as _i5.HttpClientAdapter);
  @override
  set httpClientAdapter(_i5.HttpClientAdapter? _httpClientAdapter) =>
      super.noSuchMethod(
        Invocation.setter(
          #httpClientAdapter,
          _httpClientAdapter,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.Transformer get transformer => (super.noSuchMethod(
        Invocation.getter(#transformer),
        returnValue: _FakeTransformer_4(
          this,
          Invocation.getter(#transformer),
        ),
      ) as _i6.Transformer);
  @override
  set transformer(_i6.Transformer? _transformer) => super.noSuchMethod(
        Invocation.setter(
          #transformer,
          _transformer,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i7.Interceptors get interceptors => (super.noSuchMethod(
        Invocation.getter(#interceptors),
        returnValue: _FakeInterceptors_5(
          this,
          Invocation.getter(#interceptors),
        ),
      ) as _i7.Interceptors);
  @override
  void close({bool? force = false}) => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
          {#force: force},
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i11.Future<_i8.Response<T>> get<T>(
    String? path, {
    Map<String, dynamic>? queryParameters,
    _i4.Options? options,
    _i20.CancelToken? cancelToken,
    _i4.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [path],
          {
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i11.Future<_i8.Response<T>>.value(_FakeResponse_6<T>(
          this,
          Invocation.method(
            #get,
            [path],
            {
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i11.Future<_i8.Response<T>>);
  @override
  _i11.Future<_i8.Response<T>> getUri<T>(
    Uri? uri, {
    _i4.Options? options,
    _i20.CancelToken? cancelToken,
    _i4.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUri,
          [uri],
          {
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i11.Future<_i8.Response<T>>.value(_FakeResponse_6<T>(
          this,
          Invocation.method(
            #getUri,
            [uri],
            {
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i11.Future<_i8.Response<T>>);
  @override
  _i11.Future<_i8.Response<T>> post<T>(
    String? path, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i4.Options? options,
    _i20.CancelToken? cancelToken,
    _i4.ProgressCallback? onSendProgress,
    _i4.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i11.Future<_i8.Response<T>>.value(_FakeResponse_6<T>(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i11.Future<_i8.Response<T>>);
  @override
  _i11.Future<_i8.Response<T>> postUri<T>(
    Uri? uri, {
    dynamic data,
    _i4.Options? options,
    _i20.CancelToken? cancelToken,
    _i4.ProgressCallback? onSendProgress,
    _i4.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i11.Future<_i8.Response<T>>.value(_FakeResponse_6<T>(
          this,
          Invocation.method(
            #postUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i11.Future<_i8.Response<T>>);
  @override
  _i11.Future<_i8.Response<T>> put<T>(
    String? path, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i4.Options? options,
    _i20.CancelToken? cancelToken,
    _i4.ProgressCallback? onSendProgress,
    _i4.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i11.Future<_i8.Response<T>>.value(_FakeResponse_6<T>(
          this,
          Invocation.method(
            #put,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i11.Future<_i8.Response<T>>);
  @override
  _i11.Future<_i8.Response<T>> putUri<T>(
    Uri? uri, {
    dynamic data,
    _i4.Options? options,
    _i20.CancelToken? cancelToken,
    _i4.ProgressCallback? onSendProgress,
    _i4.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i11.Future<_i8.Response<T>>.value(_FakeResponse_6<T>(
          this,
          Invocation.method(
            #putUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i11.Future<_i8.Response<T>>);
  @override
  _i11.Future<_i8.Response<T>> head<T>(
    String? path, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i4.Options? options,
    _i20.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i11.Future<_i8.Response<T>>.value(_FakeResponse_6<T>(
          this,
          Invocation.method(
            #head,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i11.Future<_i8.Response<T>>);
  @override
  _i11.Future<_i8.Response<T>> headUri<T>(
    Uri? uri, {
    dynamic data,
    _i4.Options? options,
    _i20.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #headUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i11.Future<_i8.Response<T>>.value(_FakeResponse_6<T>(
          this,
          Invocation.method(
            #headUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i11.Future<_i8.Response<T>>);
  @override
  _i11.Future<_i8.Response<T>> delete<T>(
    String? path, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i4.Options? options,
    _i20.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i11.Future<_i8.Response<T>>.value(_FakeResponse_6<T>(
          this,
          Invocation.method(
            #delete,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i11.Future<_i8.Response<T>>);
  @override
  _i11.Future<_i8.Response<T>> deleteUri<T>(
    Uri? uri, {
    dynamic data,
    _i4.Options? options,
    _i20.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i11.Future<_i8.Response<T>>.value(_FakeResponse_6<T>(
          this,
          Invocation.method(
            #deleteUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i11.Future<_i8.Response<T>>);
  @override
  _i11.Future<_i8.Response<T>> patch<T>(
    String? path, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i4.Options? options,
    _i20.CancelToken? cancelToken,
    _i4.ProgressCallback? onSendProgress,
    _i4.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i11.Future<_i8.Response<T>>.value(_FakeResponse_6<T>(
          this,
          Invocation.method(
            #patch,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i11.Future<_i8.Response<T>>);
  @override
  _i11.Future<_i8.Response<T>> patchUri<T>(
    Uri? uri, {
    dynamic data,
    _i4.Options? options,
    _i20.CancelToken? cancelToken,
    _i4.ProgressCallback? onSendProgress,
    _i4.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patchUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i11.Future<_i8.Response<T>>.value(_FakeResponse_6<T>(
          this,
          Invocation.method(
            #patchUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i11.Future<_i8.Response<T>>);
  @override
  void lock() => super.noSuchMethod(
        Invocation.method(
          #lock,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void unlock() => super.noSuchMethod(
        Invocation.method(
          #unlock,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void clear() => super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i11.Future<_i8.Response<dynamic>> download(
    String? urlPath,
    dynamic savePath, {
    _i4.ProgressCallback? onReceiveProgress,
    Map<String, dynamic>? queryParameters,
    _i20.CancelToken? cancelToken,
    bool? deleteOnError = true,
    String? lengthHeader = r'content-length',
    dynamic data,
    _i4.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #download,
          [
            urlPath,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i11.Future<_i8.Response<dynamic>>.value(_FakeResponse_6<dynamic>(
          this,
          Invocation.method(
            #download,
            [
              urlPath,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i11.Future<_i8.Response<dynamic>>);
  @override
  _i11.Future<_i8.Response<dynamic>> downloadUri(
    Uri? uri,
    dynamic savePath, {
    _i4.ProgressCallback? onReceiveProgress,
    _i20.CancelToken? cancelToken,
    bool? deleteOnError = true,
    String? lengthHeader = r'content-length',
    dynamic data,
    _i4.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #downloadUri,
          [
            uri,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i11.Future<_i8.Response<dynamic>>.value(_FakeResponse_6<dynamic>(
          this,
          Invocation.method(
            #downloadUri,
            [
              uri,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i11.Future<_i8.Response<dynamic>>);
  @override
  _i11.Future<_i8.Response<T>> request<T>(
    String? path, {
    dynamic data,
    Map<String, dynamic>? queryParameters,
    _i20.CancelToken? cancelToken,
    _i4.Options? options,
    _i4.ProgressCallback? onSendProgress,
    _i4.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #request,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i11.Future<_i8.Response<T>>.value(_FakeResponse_6<T>(
          this,
          Invocation.method(
            #request,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i11.Future<_i8.Response<T>>);
  @override
  _i11.Future<_i8.Response<T>> requestUri<T>(
    Uri? uri, {
    dynamic data,
    _i20.CancelToken? cancelToken,
    _i4.Options? options,
    _i4.ProgressCallback? onSendProgress,
    _i4.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestUri,
          [uri],
          {
            #data: data,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i11.Future<_i8.Response<T>>.value(_FakeResponse_6<T>(
          this,
          Invocation.method(
            #requestUri,
            [uri],
            {
              #data: data,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i11.Future<_i8.Response<T>>);
  @override
  _i11.Future<_i8.Response<T>> fetch<T>(_i4.RequestOptions? requestOptions) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetch,
          [requestOptions],
        ),
        returnValue: _i11.Future<_i8.Response<T>>.value(_FakeResponse_6<T>(
          this,
          Invocation.method(
            #fetch,
            [requestOptions],
          ),
        )),
      ) as _i11.Future<_i8.Response<T>>);
}

/// A class which mocks [DefaultLogInterceptor].
///
/// See the documentation for Mockito's code generation for more information.
class MockDefaultLogInterceptor extends _i1.Mock
    implements _i21.DefaultLogInterceptor {
  MockDefaultLogInterceptor() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get request => (super.noSuchMethod(
        Invocation.getter(#request),
        returnValue: false,
      ) as bool);
  @override
  set request(bool? _request) => super.noSuchMethod(
        Invocation.setter(
          #request,
          _request,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get requestHeader => (super.noSuchMethod(
        Invocation.getter(#requestHeader),
        returnValue: false,
      ) as bool);
  @override
  set requestHeader(bool? _requestHeader) => super.noSuchMethod(
        Invocation.setter(
          #requestHeader,
          _requestHeader,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get requestBody => (super.noSuchMethod(
        Invocation.getter(#requestBody),
        returnValue: false,
      ) as bool);
  @override
  set requestBody(bool? _requestBody) => super.noSuchMethod(
        Invocation.setter(
          #requestBody,
          _requestBody,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get responseBody => (super.noSuchMethod(
        Invocation.getter(#responseBody),
        returnValue: false,
      ) as bool);
  @override
  set responseBody(bool? _responseBody) => super.noSuchMethod(
        Invocation.setter(
          #responseBody,
          _responseBody,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get responseHeader => (super.noSuchMethod(
        Invocation.getter(#responseHeader),
        returnValue: false,
      ) as bool);
  @override
  set responseHeader(bool? _responseHeader) => super.noSuchMethod(
        Invocation.setter(
          #responseHeader,
          _responseHeader,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get error => (super.noSuchMethod(
        Invocation.getter(#error),
        returnValue: false,
      ) as bool);
  @override
  set error(bool? _error) => super.noSuchMethod(
        Invocation.setter(
          #error,
          _error,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set logSize(dynamic _logSize) => super.noSuchMethod(
        Invocation.setter(
          #logSize,
          _logSize,
        ),
        returnValueForMissingStub: null,
      );
  @override
  DateTime get startTime => (super.noSuchMethod(
        Invocation.getter(#startTime),
        returnValue: _FakeDateTime_7(
          this,
          Invocation.getter(#startTime),
        ),
      ) as DateTime);
  @override
  set startTime(DateTime? _startTime) => super.noSuchMethod(
        Invocation.setter(
          #startTime,
          _startTime,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i11.Future<dynamic> onRequest(
    _i4.RequestOptions? options,
    _i7.RequestInterceptorHandler? handler,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #onRequest,
          [
            options,
            handler,
          ],
        ),
        returnValue: _i11.Future<dynamic>.value(),
      ) as _i11.Future<dynamic>);
  @override
  _i11.Future<dynamic> onError(
    _i9.DioError? err,
    _i7.ErrorInterceptorHandler? handler,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            err,
            handler,
          ],
        ),
        returnValue: _i11.Future<dynamic>.value(),
      ) as _i11.Future<dynamic>);
  @override
  _i11.Future<dynamic> onResponse(
    _i8.Response<dynamic>? response,
    _i7.ResponseInterceptorHandler? handler,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #onResponse,
          [
            response,
            handler,
          ],
        ),
        returnValue: _i11.Future<dynamic>.value(),
      ) as _i11.Future<dynamic>);
}

/// A class which mocks [RefreshTokenInterceptor].
///
/// See the documentation for Mockito's code generation for more information.
class MockRefreshTokenInterceptor extends _i1.Mock
    implements _i22.RefreshTokenInterceptor {
  MockRefreshTokenInterceptor() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<String> get nonTokenList => (super.noSuchMethod(
        Invocation.getter(#nonTokenList),
        returnValue: <String>[],
      ) as List<String>);
  @override
  _i11.Future<dynamic> onRequest(
    _i4.RequestOptions? options,
    _i7.RequestInterceptorHandler? handler,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #onRequest,
          [
            options,
            handler,
          ],
        ),
        returnValue: _i11.Future<dynamic>.value(),
      ) as _i11.Future<dynamic>);
  @override
  _i11.Future<dynamic> onError(
    _i9.DioError? err,
    _i7.ErrorInterceptorHandler? handler,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            err,
            handler,
          ],
        ),
        returnValue: _i11.Future<dynamic>.value(),
      ) as _i11.Future<dynamic>);
  @override
  _i11.Future<Map<String, dynamic>?> callRefresh(
          _i8.Response<dynamic>? response) =>
      (super.noSuchMethod(
        Invocation.method(
          #callRefresh,
          [response],
        ),
        returnValue: _i11.Future<Map<String, dynamic>?>.value(),
      ) as _i11.Future<Map<String, dynamic>?>);
  @override
  bool mustHaveToken(String? url) => (super.noSuchMethod(
        Invocation.method(
          #mustHaveToken,
          [url],
        ),
        returnValue: false,
      ) as bool);
  @override
  void onResponse(
    _i8.Response<dynamic>? response,
    _i7.ResponseInterceptorHandler? handler,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onResponse,
          [
            response,
            handler,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [CheckUserAvailable].
///
/// See the documentation for Mockito's code generation for more information.
class MockCheckUserAvailable extends _i1.Mock
    implements _i23.CheckUserAvailable {
  MockCheckUserAvailable() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.LoginRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeLoginRepository_1(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i3.LoginRepository);
  @override
  _i11.Future<_i2.Either<_i12.ReponseErrorModel, String>> call(
          _i23.ParamCheckUser? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue:
            _i11.Future<_i2.Either<_i12.ReponseErrorModel, String>>.value(
                _FakeEither_0<_i12.ReponseErrorModel, String>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i11.Future<_i2.Either<_i12.ReponseErrorModel, String>>);
}

/// A class which mocks [InternetConnection].
///
/// See the documentation for Mockito's code generation for more information.
class MockInternetConnection extends _i1.Mock
    implements _i24.InternetConnection {
  MockInternetConnection() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.Future<bool> isHasConnection() => (super.noSuchMethod(
        Invocation.method(
          #isHasConnection,
          [],
        ),
        returnValue: _i11.Future<bool>.value(false),
      ) as _i11.Future<bool>);
}

/// A class which mocks [RequestOptions].
///
/// See the documentation for Mockito's code generation for more information.
class MockRequestOptions extends _i1.Mock implements _i4.RequestOptions {
  MockRequestOptions() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set data(dynamic _data) => super.noSuchMethod(
        Invocation.setter(
          #data,
          _data,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get path => (super.noSuchMethod(
        Invocation.getter(#path),
        returnValue: '',
      ) as String);
  @override
  set path(String? _path) => super.noSuchMethod(
        Invocation.setter(
          #path,
          _path,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set cancelToken(_i20.CancelToken? _cancelToken) => super.noSuchMethod(
        Invocation.setter(
          #cancelToken,
          _cancelToken,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set onReceiveProgress(_i4.ProgressCallback? _onReceiveProgress) =>
      super.noSuchMethod(
        Invocation.setter(
          #onReceiveProgress,
          _onReceiveProgress,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set onSendProgress(_i4.ProgressCallback? _onSendProgress) =>
      super.noSuchMethod(
        Invocation.setter(
          #onSendProgress,
          _onSendProgress,
        ),
        returnValueForMissingStub: null,
      );
  @override
  Uri get uri => (super.noSuchMethod(
        Invocation.getter(#uri),
        returnValue: _FakeUri_8(
          this,
          Invocation.getter(#uri),
        ),
      ) as Uri);
  @override
  String get method => (super.noSuchMethod(
        Invocation.getter(#method),
        returnValue: '',
      ) as String);
  @override
  set method(String? _method) => super.noSuchMethod(
        Invocation.setter(
          #method,
          _method,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get sendTimeout => (super.noSuchMethod(
        Invocation.getter(#sendTimeout),
        returnValue: 0,
      ) as int);
  @override
  set sendTimeout(int? _sendTimeout) => super.noSuchMethod(
        Invocation.setter(
          #sendTimeout,
          _sendTimeout,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get receiveTimeout => (super.noSuchMethod(
        Invocation.getter(#receiveTimeout),
        returnValue: 0,
      ) as int);
  @override
  set receiveTimeout(int? _receiveTimeout) => super.noSuchMethod(
        Invocation.setter(
          #receiveTimeout,
          _receiveTimeout,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.ResponseType get responseType => (super.noSuchMethod(
        Invocation.getter(#responseType),
        returnValue: _i4.ResponseType.json,
      ) as _i4.ResponseType);
  @override
  set responseType(_i4.ResponseType? _responseType) => super.noSuchMethod(
        Invocation.setter(
          #responseType,
          _responseType,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.ValidateStatus get validateStatus => (super.noSuchMethod(
        Invocation.getter(#validateStatus),
        returnValue: (int? status) => false,
      ) as _i4.ValidateStatus);
  @override
  set validateStatus(_i4.ValidateStatus? _validateStatus) => super.noSuchMethod(
        Invocation.setter(
          #validateStatus,
          _validateStatus,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get receiveDataWhenStatusError => (super.noSuchMethod(
        Invocation.getter(#receiveDataWhenStatusError),
        returnValue: false,
      ) as bool);
  @override
  set receiveDataWhenStatusError(bool? _receiveDataWhenStatusError) =>
      super.noSuchMethod(
        Invocation.setter(
          #receiveDataWhenStatusError,
          _receiveDataWhenStatusError,
        ),
        returnValueForMissingStub: null,
      );
  @override
  Map<String, dynamic> get extra => (super.noSuchMethod(
        Invocation.getter(#extra),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
  @override
  set extra(Map<String, dynamic>? _extra) => super.noSuchMethod(
        Invocation.setter(
          #extra,
          _extra,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get followRedirects => (super.noSuchMethod(
        Invocation.getter(#followRedirects),
        returnValue: false,
      ) as bool);
  @override
  set followRedirects(bool? _followRedirects) => super.noSuchMethod(
        Invocation.setter(
          #followRedirects,
          _followRedirects,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get maxRedirects => (super.noSuchMethod(
        Invocation.getter(#maxRedirects),
        returnValue: 0,
      ) as int);
  @override
  set maxRedirects(int? _maxRedirects) => super.noSuchMethod(
        Invocation.setter(
          #maxRedirects,
          _maxRedirects,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set requestEncoder(_i4.RequestEncoder? _requestEncoder) => super.noSuchMethod(
        Invocation.setter(
          #requestEncoder,
          _requestEncoder,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set responseDecoder(_i4.ResponseDecoder? _responseDecoder) =>
      super.noSuchMethod(
        Invocation.setter(
          #responseDecoder,
          _responseDecoder,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.ListFormat get listFormat => (super.noSuchMethod(
        Invocation.getter(#listFormat),
        returnValue: _i4.ListFormat.csv,
      ) as _i4.ListFormat);
  @override
  set listFormat(_i4.ListFormat? _listFormat) => super.noSuchMethod(
        Invocation.setter(
          #listFormat,
          _listFormat,
        ),
        returnValueForMissingStub: null,
      );
  @override
  Map<String, dynamic> get headers => (super.noSuchMethod(
        Invocation.getter(#headers),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
  @override
  set headers(Map<String, dynamic>? headers) => super.noSuchMethod(
        Invocation.setter(
          #headers,
          headers,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set contentType(String? contentType) => super.noSuchMethod(
        Invocation.setter(
          #contentType,
          contentType,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get baseUrl => (super.noSuchMethod(
        Invocation.getter(#baseUrl),
        returnValue: '',
      ) as String);
  @override
  set baseUrl(String? _baseUrl) => super.noSuchMethod(
        Invocation.setter(
          #baseUrl,
          _baseUrl,
        ),
        returnValueForMissingStub: null,
      );
  @override
  Map<String, dynamic> get queryParameters => (super.noSuchMethod(
        Invocation.getter(#queryParameters),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
  @override
  set queryParameters(Map<String, dynamic>? _queryParameters) =>
      super.noSuchMethod(
        Invocation.setter(
          #queryParameters,
          _queryParameters,
        ),
        returnValueForMissingStub: null,
      );
  @override
  int get connectTimeout => (super.noSuchMethod(
        Invocation.getter(#connectTimeout),
        returnValue: 0,
      ) as int);
  @override
  set connectTimeout(int? _connectTimeout) => super.noSuchMethod(
        Invocation.setter(
          #connectTimeout,
          _connectTimeout,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.RequestOptions copyWith({
    String? method,
    int? sendTimeout,
    int? receiveTimeout,
    int? connectTimeout,
    dynamic data,
    String? path,
    Map<String, dynamic>? queryParameters,
    String? baseUrl,
    _i4.ProgressCallback? onReceiveProgress,
    _i4.ProgressCallback? onSendProgress,
    _i20.CancelToken? cancelToken,
    Map<String, dynamic>? extra,
    Map<String, dynamic>? headers,
    _i4.ResponseType? responseType,
    String? contentType,
    _i4.ValidateStatus? validateStatus,
    bool? receiveDataWhenStatusError,
    bool? followRedirects,
    int? maxRedirects,
    _i4.RequestEncoder? requestEncoder,
    _i4.ResponseDecoder? responseDecoder,
    _i4.ListFormat? listFormat,
    bool? setRequestContentTypeWhenNoPayload,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #copyWith,
          [],
          {
            #method: method,
            #sendTimeout: sendTimeout,
            #receiveTimeout: receiveTimeout,
            #connectTimeout: connectTimeout,
            #data: data,
            #path: path,
            #queryParameters: queryParameters,
            #baseUrl: baseUrl,
            #onReceiveProgress: onReceiveProgress,
            #onSendProgress: onSendProgress,
            #cancelToken: cancelToken,
            #extra: extra,
            #headers: headers,
            #responseType: responseType,
            #contentType: contentType,
            #validateStatus: validateStatus,
            #receiveDataWhenStatusError: receiveDataWhenStatusError,
            #followRedirects: followRedirects,
            #maxRedirects: maxRedirects,
            #requestEncoder: requestEncoder,
            #responseDecoder: responseDecoder,
            #listFormat: listFormat,
            #setRequestContentTypeWhenNoPayload:
                setRequestContentTypeWhenNoPayload,
          },
        ),
        returnValue: _FakeRequestOptions_9(
          this,
          Invocation.method(
            #copyWith,
            [],
            {
              #method: method,
              #sendTimeout: sendTimeout,
              #receiveTimeout: receiveTimeout,
              #connectTimeout: connectTimeout,
              #data: data,
              #path: path,
              #queryParameters: queryParameters,
              #baseUrl: baseUrl,
              #onReceiveProgress: onReceiveProgress,
              #onSendProgress: onSendProgress,
              #cancelToken: cancelToken,
              #extra: extra,
              #headers: headers,
              #responseType: responseType,
              #contentType: contentType,
              #validateStatus: validateStatus,
              #receiveDataWhenStatusError: receiveDataWhenStatusError,
              #followRedirects: followRedirects,
              #maxRedirects: maxRedirects,
              #requestEncoder: requestEncoder,
              #responseDecoder: responseDecoder,
              #listFormat: listFormat,
              #setRequestContentTypeWhenNoPayload:
                  setRequestContentTypeWhenNoPayload,
            },
          ),
        ),
      ) as _i4.RequestOptions);
}

/// A class which mocks [RequestInterceptorHandler].
///
/// See the documentation for Mockito's code generation for more information.
class MockRequestInterceptorHandler extends _i1.Mock
    implements _i7.RequestInterceptorHandler {
  MockRequestInterceptorHandler() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i11.Future<_i7.InterceptorState<dynamic>> get future => (super.noSuchMethod(
        Invocation.getter(#future),
        returnValue: _i11.Future<_i7.InterceptorState<dynamic>>.value(
            _FakeInterceptorState_10<dynamic>(
          this,
          Invocation.getter(#future),
        )),
      ) as _i11.Future<_i7.InterceptorState<dynamic>>);
  @override
  bool get isCompleted => (super.noSuchMethod(
        Invocation.getter(#isCompleted),
        returnValue: false,
      ) as bool);
  @override
  void next(_i4.RequestOptions? requestOptions) => super.noSuchMethod(
        Invocation.method(
          #next,
          [requestOptions],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void resolve(
    _i8.Response<dynamic>? response, [
    bool? callFollowingResponseInterceptor = false,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #resolve,
          [
            response,
            callFollowingResponseInterceptor,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void reject(
    _i9.DioError? error, [
    bool? callFollowingErrorInterceptor = false,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #reject,
          [
            error,
            callFollowingErrorInterceptor,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [PostPushId].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostPushId extends _i1.Mock implements _i25.PostPushId {
  MockPostPushId() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.LoginRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeLoginRepository_1(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i3.LoginRepository);
  @override
  _i11.Future<_i2.Either<_i12.ReponseErrorModel, String>> call(
          _i25.ParamPushId? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue:
            _i11.Future<_i2.Either<_i12.ReponseErrorModel, String>>.value(
                _FakeEither_0<_i12.ReponseErrorModel, String>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i11.Future<_i2.Either<_i12.ReponseErrorModel, String>>);
}

/// A class which mocks [BaseDio].
///
/// See the documentation for Mockito's code generation for more information.
class MockBaseDio extends _i1.Mock implements _i26.BaseDio {
  MockBaseDio() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Dio get dio => (super.noSuchMethod(
        Invocation.getter(#dio),
        returnValue: _FakeDio_11(
          this,
          Invocation.getter(#dio),
        ),
      ) as _i9.Dio);
  @override
  set dio(_i9.Dio? _dio) => super.noSuchMethod(
        Invocation.setter(
          #dio,
          _dio,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i11.Future<_i10.ResultEntity<T>> request<T>(
    String? url,
    _i27.MethodType? method, {
    Map<String, String>? headers,
    dynamic data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #request,
          [
            url,
            method,
          ],
          {
            #headers: headers,
            #data: data,
          },
        ),
        returnValue:
            _i11.Future<_i10.ResultEntity<T>>.value(_FakeResultEntity_12<T>(
          this,
          Invocation.method(
            #request,
            [
              url,
              method,
            ],
            {
              #headers: headers,
              #data: data,
            },
          ),
        )),
      ) as _i11.Future<_i10.ResultEntity<T>>);
  @override
  _i11.Future<_i10.ResultEntity<T>> get<T>(
    String? url, {
    Map<String, String>? headers,
    dynamic data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {
            #headers: headers,
            #data: data,
          },
        ),
        returnValue:
            _i11.Future<_i10.ResultEntity<T>>.value(_FakeResultEntity_12<T>(
          this,
          Invocation.method(
            #get,
            [url],
            {
              #headers: headers,
              #data: data,
            },
          ),
        )),
      ) as _i11.Future<_i10.ResultEntity<T>>);
  @override
  _i11.Future<_i10.ResultEntity<T>> post<T>(
    String? url, {
    Map<String, String>? headers,
    required Map<String, dynamic>? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #data: data,
          },
        ),
        returnValue:
            _i11.Future<_i10.ResultEntity<T>>.value(_FakeResultEntity_12<T>(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #data: data,
            },
          ),
        )),
      ) as _i11.Future<_i10.ResultEntity<T>>);
  @override
  _i11.Future<_i10.ResultEntity<T>> uploadFile<T>(
    String? url, {
    required Map<String, dynamic>? param,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadFile,
          [url],
          {#param: param},
        ),
        returnValue:
            _i11.Future<_i10.ResultEntity<T>>.value(_FakeResultEntity_12<T>(
          this,
          Invocation.method(
            #uploadFile,
            [url],
            {#param: param},
          ),
        )),
      ) as _i11.Future<_i10.ResultEntity<T>>);
  @override
  _i11.Future<_i10.ResultEntity<T>> put<T>(
    String? url, {
    Map<String, String>? headers,
    required Map<String, dynamic>? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #data: data,
          },
        ),
        returnValue:
            _i11.Future<_i10.ResultEntity<T>>.value(_FakeResultEntity_12<T>(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #data: data,
            },
          ),
        )),
      ) as _i11.Future<_i10.ResultEntity<T>>);
  @override
  _i11.Future<_i10.ResultEntity<T>> delete<T>(
    String? url, {
    Map<String, String>? headers,
    required Map<String, dynamic>? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #data: data,
          },
        ),
        returnValue:
            _i11.Future<_i10.ResultEntity<T>>.value(_FakeResultEntity_12<T>(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #data: data,
            },
          ),
        )),
      ) as _i11.Future<_i10.ResultEntity<T>>);
}
